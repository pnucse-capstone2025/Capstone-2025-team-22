# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

ga_env

src/data
nlp/data
src/ignore
.DS_Store

src/model_state/best_model.pt
nlp/best_model.pt
nlp/data_preprocessing.ipynb

# Node.js dependencies
node_modules/
front_end/node_modules/
package-lock.json
nlp/data_preprocessing.ipynb

# AI/ML Model files (민감한 학습된 모델 파일들)
*.pt
*.pth
*.pkl
*.h5
*.ckpt
*.model
*.weights
nlp/best_model.*
nlp/model_checkpoints/
nlp/saved_models/

# Log files (로그 파일들)
*.log
log/
logs/
nlp/log/
back_end/logs/

# Node.js (프론트엔드 관련)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json  # 루트 레벨의 불필요한 lock 파일
.npm
.yarn/

# Docker 관련
.dockerignore
docker-compose.override.yml

# IDE 및 에디터
.vscode/
.idea/
*.swp
*.swo
*~

# 운영체제 관련
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# 환경 변수 및 설정 파일
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
config/secrets.yml
config/database.yml

# 데이터베이스 관련
*.db
*.sqlite
*.sqlite3
database/
db_data/

# 임시 파일들
*.tmp
*.temp
.cache/
.temp/

results/
!nlp/results/plots/distill_kokeybert_confusion_matrix.png
!nlp/results/plots/kokeybert_confusion_matrix.png
!nlp/results/plots/keybert_1_confusion_matrix.png
!nlp/results/plots/keybert_3_confusion_matrix.png
!nlp/results/plots/keybert_5_confusion_matrix.png
!nlp/results/plots/inference_time_barplot.png
!nlp/results/plots/precision_comparison_by_progress.png
!nlp/results/plots/recall_comparison_by_progress.png
!nlp/results/plots/f1_comparison_by_progress.png
!nlp/experiments/distillation/results/plots/real_distillation_results.png

# NLP 모델 파일들 (용량이 큰 학습된 모델들)
nlp/models/*.pt
